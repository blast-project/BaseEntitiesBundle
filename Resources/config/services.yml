services:

# SYMFONY CUSTOM FORM TYPES

    librinfo_base_entities.form.type.librinfo_treeable:
        class: Librinfo\BaseEntitiesBundle\Form\Type\TreeableType
        tags:
            - { name: form.type, alias: librinfo_treeable }
            
    librinfo_base_entities.form.type.librinfo_nested_treeable:
        class: Librinfo\BaseEntitiesBundle\Form\Type\NestedTreeableType
        tags:
            - { name: form.type, alias: librinfo_nested_treeable }
            
# ###################################################################################
#
#                             DOCTRINE BEHAVIORS
#
# doctrine.event_subscriber tags are added in LibrinfoDoctrineExtension.php
# ###################################################################################

# Service that manages Table naming convention
    librinfo.base_entities.listener.naming:
        class: Librinfo\BaseEntitiesBundle\EventListener\NamingListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages GUID doctrine mapping
    librinfo.base_entities.listener.guidable:
        class: Librinfo\BaseEntitiesBundle\EventListener\GuidableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Traceable doctrine mapping and behavior
    librinfo.base_entities.listener.traceable:
        class: Librinfo\BaseEntitiesBundle\EventListener\TraceableListener
        calls:
            - [setLogger, [@logger]]
            - [setTokenStorage, [@security.token_storage]]
            - [setUserClass, [%librinfo.user_bundle.user.class%]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Addressable doctrine mapping
    librinfo.base_entities.listener.addressable:
        class: Librinfo\BaseEntitiesBundle\EventListener\AddressableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Treeable doctrine mapping
    librinfo.base_entities.listener.treeable:
        class: Librinfo\BaseEntitiesBundle\EventListener\TreeableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages NestedTreeable doctrine mapping
    librinfo.base_entities.listener.nested_treeable:
        class: Librinfo\BaseEntitiesBundle\EventListener\NestedTreeableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Nameable doctrine mapping
    librinfo.base_entities.listener.nameable:
        class: Librinfo\BaseEntitiesBundle\EventListener\NameableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Labelable doctrine mapping
    librinfo.base_entities.listener.labelable:
        class: Librinfo\BaseEntitiesBundle\EventListener\LabelableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Emailable doctrine mapping
    librinfo.base_entities.listener.emailable:
        class: Librinfo\BaseEntitiesBundle\EventListener\EmailableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Descriptible doctrine mapping
    librinfo.base_entities.listener.descriptible:
        class: Librinfo\BaseEntitiesBundle\EventListener\DescriptibleListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Searchable doctrine mapping
    librinfo.base_entities.listener.searchable:
        class: Librinfo\BaseEntitiesBundle\EventListener\SearchableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Loggable doctrine behaviour
    librinfo.base_entities.listener.loggable:
        class: Librinfo\BaseEntitiesBundle\Loggable\LoggableListener
        calls:
            - [setAnnotationReader, [@annotation_reader]]

# Service that manages Loggable doctrine behaviour
    librinfo.base_entities.listener.sortable:
        class: Librinfo\BaseEntitiesBundle\EventListener\SortableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Normalize doctrine behaviour
    librinfo.base_entities.listener.normalize:
        class: Librinfo\BaseEntitiesBundle\EventListener\NormalizeListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages GUID doctrine mapping for Sylius entities
# TODO: put this in a Sylius bundle
    librinfo.base_entities.listener.syliusGuidable:
        class: Librinfo\BaseEntitiesBundle\EventListener\SyliusGuidableListener
        calls:
            - [setLogger, [@logger]]
            - [setClassAnalyser, [Librinfo\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# ###################################################################################
#
#                          SYMFONY EVENT LISTENERS
#
# ###################################################################################

# Service that injects user information into the Loggable listener
    librinfo.base_entities.listener.logger:
        class: Librinfo\BaseEntitiesBundle\Loggable\LoggerListener
        public: false
        arguments: [@librinfo.base_entities.listener.loggable]


# ###################################################################################
#
#                          SYMFONY CUSTOM FORM TYPES
#
# ###################################################################################

    librinfo_base_entities.form.type.librinfo_baseentities_treeable:
        class: Librinfo\BaseEntitiesBundle\Form\Type\TreeableType
        calls:
            - [setEntityManager, ['@doctrine.orm.entity_manager']]
        tags:
            - { name: form.type, alias: librinfo_baseentities_treeable }
    librinfo_base_entities.form.type.librinfo_baseentities_treeablechoice:
        class: Librinfo\BaseEntitiesBundle\Form\Type\TreeableChoiceType
        calls:
            - [setEntityManager, ['@doctrine.orm.entity_manager']]
        tags:
            - { name: form.type, alias: librinfo_baseentities_treeablechoice }

# ###################################################################################
#
#                          SEARCH ANALYZER
#
# ###################################################################################

    librinfo.base_entities.search_analyser:
        class: Librinfo\BaseEntitiesBundle\SearchAnalyser\SearchAnalyser