services:

# ###################################################################################
#
#                             DOCTRINE BEHAVIORS
#
# doctrine.event_subscriber tags are added in BlastBaseEntitiesExtension.php
# ###################################################################################

    blast_core.label.strategy.librinfo_baseentities:
        class: Blast\CoreBundle\Translator\LibrinfoLabelTranslatorStrategy
        arguments: ['Blast\BaseEntitiesBundle']


# Service that manages Table naming convention
    blast_base_entities.listener.naming:
        class: Blast\BaseEntitiesBundle\EventListener\NamingListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages GUID doctrine mapping
    blast_base_entities.listener.guidable:
        class: Blast\BaseEntitiesBundle\EventListener\GuidableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Timestampable doctrine mapping and behavior
    blast_base_entities.listener.timestampable:
        class: Blast\BaseEntitiesBundle\EventListener\TimestampableListener
        calls:
            - [setLogger, ['@logger']]
            - [setTokenStorage, ['@security.token_storage']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Addressable doctrine mapping
    blast_base_entities.listener.addressable:
        class: Blast\BaseEntitiesBundle\EventListener\AddressableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Treeable doctrine mapping
    blast_base_entities.listener.treeable:
        class: Blast\BaseEntitiesBundle\EventListener\TreeableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages NestedTreeable doctrine mapping
    blast_base_entities.listener.nested_treeable:
        class: Blast\BaseEntitiesBundle\EventListener\NestedTreeableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Nameable doctrine mapping
    blast_base_entities.listener.nameable:
        class: Blast\BaseEntitiesBundle\EventListener\NameableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Labelable doctrine mapping
    blast_base_entities.listener.labelable:
        class: Blast\BaseEntitiesBundle\EventListener\LabelableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Emailable doctrine mapping
    blast_base_entities.listener.emailable:
        class: Blast\BaseEntitiesBundle\EventListener\EmailableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Descriptible doctrine mapping
    blast_base_entities.listener.descriptible:
        class: Blast\BaseEntitiesBundle\EventListener\DescriptibleListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Searchable doctrine mapping
    blast_base_entities.listener.searchable:
        class: Blast\BaseEntitiesBundle\EventListener\SearchableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]
            - [setClassFields, ['%blast_base_entities.entity_search_indexes%']]

# Service that manages Loggable doctrine behaviour
    blast_base_entities.listener.loggable:
        class: Blast\BaseEntitiesBundle\Loggable\LoggableListener
        calls:
            - [setAnnotationReader, ['@annotation_reader']]

# Service that manages Loggable doctrine behaviour
    blast_base_entities.listener.sortable:
        class: Blast\BaseEntitiesBundle\EventListener\SortableListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# Service that manages Normalize doctrine behaviour
    blast_base_entities.listener.normalize:
        class: Blast\BaseEntitiesBundle\EventListener\NormalizeListener
        calls:
            - [setLogger, ['@logger']]
            - [setClassAnalyser, [Blast\CoreBundle\Tools\Reflection\ClassAnalyzer]]

# ###################################################################################
#
#                          SYMFONY EVENT LISTENERS
#
# ###################################################################################

# Service that injects user information into the Loggable listener
    blast_base_entities.listener.logger:
        class: Blast\BaseEntitiesBundle\Loggable\LoggerListener
        public: false
        arguments: ['@blast_base_entities.listener.loggable']


# ###################################################################################
#
#                          SYMFONY CUSTOM FORM TYPES
#
# ###################################################################################

    blast_base_entities.form.type.treeable:
        class: Blast\BaseEntitiesBundle\Form\Type\TreeableType
        calls:
            - [setEntityManager, ['@doctrine.orm.entity_manager']]
        tags:
            - { name: form.type, alias: blast_treeable }
    blast_base_entities.form.type.treeablechoice:
        class: Blast\BaseEntitiesBundle\Form\Type\TreeableChoiceType
        calls:
            - [setEntityManager, ['@doctrine.orm.entity_manager']]
        tags:
            - { name: form.type, alias: blast_treeablechoice }

    blast_base_entities.form.type.nested_treeable:
        class: Blast\BaseEntitiesBundle\Form\Type\NestedTreeableType
        tags:
            - { name: form.type, alias: blast_nested_treeable }

    blast_base_entities.form.type.search_index_autocomplete:
        class: Blast\BaseEntitiesBundle\Form\Type\SearchIndexAutocompleteType
        tags:
            - { name: form.type, alias: blast_search_index_autocomplete }

# ###################################################################################
#
#                          SEARCH ANALYZER
#
# ###################################################################################

    blast_base_entities.search_analyser:
        class: Blast\BaseEntitiesBundle\Search\SearchAnalyser

    blast_base_entities.search_handler:
        class: Blast\BaseEntitiesBundle\Search\SearchHandler
        arguments: ['@doctrine.orm.entity_manager', '%blast_base_entities.entity_search_indexes%']
